/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5.0                                   |
|   \\  /    A nd           | Web:      http://www.cfdyna.com                 |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

length 20;
radius 0.5;
in_mesh 0.2;

vertices
(
    (0		#calc "-1.0*$in_mesh"          $in_mesh                      ) // 0
    (0		#calc "-1.0*$in_mesh"          #calc "-1.0*$in_mesh"         ) // 1
    (0		$in_mesh                       #calc "-1.0*$in_mesh"         ) // 2
    (0		$in_mesh                       $in_mesh                      ) // 3
    (0		#calc "-1.0*$radius/sqrt(2.0)" #calc "$radius/sqrt(2.0)"     ) // 4
    (0		#calc "-1.0*$radius/sqrt(2.0)" #calc "-1.0*$radius/sqrt(2.0)") // 5
    (0		#calc "$radius/sqrt(2.0)"      #calc "-1.0*$radius/sqrt(2.0)") // 6
    (0		#calc "$radius/sqrt(2.0)"      #calc "$radius/sqrt(2.0)"     ) // 7
    ($length	#calc "-1.0*$in_mesh"          $in_mesh                      ) // 8
    ($length	#calc "-1.0*$in_mesh"          #calc "-1.0*$in_mesh"         ) // 9
    ($length	$in_mesh                       #calc "-1.0*$in_mesh"         ) // 10
    ($length	$in_mesh                       $in_mesh                      ) // 11
    ($length	#calc "-1.0*$radius/sqrt(2.0)" #calc "$radius/sqrt(2.0)"     ) // 12
    ($length	#calc "-1.0*$radius/sqrt(2.0)" #calc "-1.0*$radius/sqrt(2.0)") // 13
    ($length	#calc "$radius/sqrt(2.0)"      #calc "-1.0*$radius/sqrt(2.0)") // 14
    ($length	#calc "$radius/sqrt(2.0)"      #calc "$radius/sqrt(2.0)"     ) // 15
);

blocks
(
    hex (0 1 2 3   8  9 10  11) (10 10 200) simpleGrading (1 1 1)
    hex (0 4 5 1   8  12 13 9 ) (15 10 200) simpleGrading (0.3 1 1)
    hex (1 5 6 2   9  13 14 10) (15 10 200) simpleGrading (0.3 1 1)
    hex (2 6 7 3   10 14 15 11) (15 10 200) simpleGrading (0.3 1 1)
    hex (3 7 4 0   11 15 12 8 ) (15 10 200) simpleGrading (0.3 1 1)
);

edges
(
    arc 4  5  (0	#calc "-1.0*$radius"  0                  )
    arc 5  6  (0	0                    #calc "-1.0*$radius")
    arc 6  7  (0	$radius              0                   )
    arc 7  4  (0	0                    $radius             )
    arc 12 13 ($length	#calc "-1.0*$radius" 0                   )
    arc 13 14 ($length	0                    #calc "-1.0*$radius")
    arc 14 15 ($length	$radius              0                   )
    arc 15 12 ($length	0                    $radius             )
);

defaultPatch
{
    name wall;
    type wall;
}

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 3 2 1)
            (1 5 4 0)
            (2 6 5 1)
            (3 7 6 2)
            (0 4 7 3)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (8  9  10 11)
            (8  12 13 9)
            (9  13 14 10)
            (10 14 15 11)
            (11 15 12 8)
        );
    }

);

mergePatchPairs
(
);

// ************************************************************************* //
